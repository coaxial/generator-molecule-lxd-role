// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers .gitignore is correctly formatted 1`] = `
"*.pyc
*.log
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers .travis.yml is correctly formatted 1`] = `
"---
jobs:
  include:
    - &test
      stage: test
      language: python
      python: \\"2.7\\"
      cache: pip
      dist: xenial
      sudo: required
      install:
        - .travis/setup.sh
      env:
        # keep fact gathering from timing out
        - ANSIBLE_GATHER_TIMEOUT=300
      script:
        # the python venv needs to be in the path for molecule to run
        # https://unix.stackexchange.com/questions/83191/how-to-make-sudo-preserve-path
        - sudo env \\"PATH=$PATH\\" \\"ANSIBLE_GATHER_TIMEOUT=$ANSIBLE_GATHER_TIMEOUT\\" molecule test

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers .travis/setup.sh is correctly formatted 1`] = `
"#!/bin/sh
sudo apt-get update
# xenial ships LXD 2 LTS, backports ships 3 LTS
sudo apt-get upgrade -t xenial-backports -y lxd lxd-client

sudo lxd --version
# Wait for the socket to be ready
sudo lxd waitready
sudo lxd init --auto

pip install ansible
pip install molecule

# Enable nesting without privileged containers,
# cf. https://stgraber.org/2017/06/15/custom-user-mappings-in-lxd-containers/
sudo sed -i 's/^\\\\(lxd:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subuid
sudo sed -i 's/^\\\\(root:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subuid
sudo sed -i 's/^\\\\(lxd:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subgid
sudo sed -i 's/^\\\\(root:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subgid
sudo systemctl restart lxd
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers .yamllint is correctly formatted 1`] = `
"extends: default

rules:
  braces:
    max-spaces-inside: 1
    level: error
  brackets:
    max-spaces-inside: 1
    level: error
  line-length: disable
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers molecule/create.yml is correctly formatted 1`] = `
"---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: \\"{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}\\"
  tasks:
    - name: Create molecule instance(s)
      lxd_container:
        name: \\"{{ item.name }}\\"
        state: started
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: simplestreams
          alias: \\"{{ item.alias }}/amd64\\"
        profiles: [\\"default\\"]
        wait_for_ipv4_addresses: true
        timeout: 600
      with_items: \\"{{ molecule_yml.platforms }}\\"

    - name: Install Python in container
      delegate_to: \\"{{ item.name }}\\"
      raw: apt-get install -y python
      with_items: \\"{{ molecule_yml.platforms }}\\"
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers molecule/default/molecule.yml is correctly formatted 1`] = `
"---
dependency:
  name: galaxy
driver:
  name: lxd
lint:
  name: yamllint
platforms:
  - name: ubuntu-trusty
    alias: ubuntu/trusty
  - name: ubuntu-xenial
    alias: ubuntu/xenial
  - name: ubuntu-bionic
    alias: ubuntu/bionic

provisioner:
  name: ansible
  playbooks:
    create: ../create.yml
    destroy: ../destroy.yml
  lint:
    name: ansible-lint
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers molecule/default/playbook.yml is correctly formatted 1`] = `
"---
- name: Converge
  hosts: all
  roles:
    - name: ansible-role-test-role
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers molecule/default/tests/test_default.py is correctly formatted 1`] = `
"import os

import testinfra.utils.ansible_runner

testinfra_hosts = testinfra.utils.ansible_runner.AnsibleRunner(
    os.environ['MOLECULE_INVENTORY_FILE']).get_hosts('all')


def test_example(host):
    file = host.file('/etc/hosts')

    assert file.exists
    assert file.user == 'root'
    assert file.group == 'root'
"
`;

exports[`generator-molecule-lxd-role:molecule when all the prompts have answers molecule/destroy.yml is correctly formatted 1`] = `
"---
- name: Destroy
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: \\"{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}\\"
  tasks:
    - name: Destroy molecule instance(s)
      lxd_container:
        name: \\"{{ item.name }}\\"
        state: absent
        force_stop: \\"{{ item.force_stop | default(true) }}\\"
      with_items: \\"{{ molecule_yml.platforms }}\\"
"
`;

exports[`generator-molecule-lxd-role:molecule when generating for a playbook molecule/default/molecule.yml is correctly formatted 1`] = `
"---
dependency:
  name: galaxy
driver:
  name: lxd
lint:
  name: yamllint
platforms:
  - name: ubuntu-trusty
    alias: ubuntu/trusty
  - name: ubuntu-xenial
    alias: ubuntu/xenial
  - name: ubuntu-bionic
    alias: ubuntu/bionic

provisioner:
  name: ansible
  playbooks:
    create: ../create.yml
    converge: ../../playbook.yml
    destroy: ../destroy.yml
  lint:
    name: ansible-lint
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
"
`;

exports[`generator-molecule-lxd-role:molecule when generating for a role molecule/default/molecule.yml is correctly formatted 1`] = `
"---
dependency:
  name: galaxy
driver:
  name: lxd
lint:
  name: yamllint
platforms:
  - name: ubuntu-trusty
    alias: ubuntu/trusty
  - name: ubuntu-xenial
    alias: ubuntu/xenial
  - name: ubuntu-bionic
    alias: ubuntu/bionic

provisioner:
  name: ansible
  playbooks:
    create: ../create.yml
    destroy: ../destroy.yml
  lint:
    name: ansible-lint
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
"
`;

exports[`generator-molecule-lxd-role:molecule when generating for a role molecule/default/playbook.yml is correctly formatted 1`] = `
"---
- name: Converge
  hosts: all
  roles:
    - name: ansible-role-test-role
"
`;

exports[`generator-molecule-lxd-role:molecule when targetting another distribution than Ubuntu molecule/default/molecule.yml formats the platform list properly 1`] = `
"---
dependency:
  name: galaxy
driver:
  name: lxd
lint:
  name: yamllint
platforms:
  - name: debian-jessie
    alias: debian/jessie
  - name: debian-stretch
    alias: debian/stretch

provisioner:
  name: ansible
  playbooks:
    create: ../create.yml
    destroy: ../destroy.yml
  lint:
    name: ansible-lint
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
"
`;
