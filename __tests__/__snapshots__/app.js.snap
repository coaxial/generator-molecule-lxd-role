// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator-molecule-lxd-role:app when Travis disabled README.md skips the badge 1`] = `
"Test role
=========

This is a test description for the role.

Requirements
------------

This role makes some assumptions.

Role Variables
--------------

Name | Default | Possible values | Description
---|---|---|---
\`example_variable\` | \`true\` | \`true\` or \`false\` | This is an example to populate the table.

Dependencies
------------

- role
- username.myrole

Example Playbook
----------------

\`\`\`yaml
- hosts: all
  roles:
    - role
    - username.myrole
    - test-role
\`\`\`

License
-------

MIT

Author Information
------------------

Test author ([Test organization](https://example.org))"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers .gitignore is correctly formatted 1`] = `
"*.pyc
*.log
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers .travis.yml is correctly formatted 1`] = `
"---
jobs:
  include:
    - &test
      stage: test
      language: python
      python: \\"2.7\\"
      cache: pip
      dist: xenial
      sudo: required
      install:
        - .travis/setup.sh
      env:
        # keep fact gathering from timing out
        - ANSIBLE_GATHER_TIMEOUT=300
      script:
        # the python venv needs to be in the path for molecule to run
        # https://unix.stackexchange.com/questions/83191/how-to-make-sudo-preserve-path
        - sudo env \\"PATH=$PATH\\" \\"ANSIBLE_GATHER_TIMEOUT=$ANSIBLE_GATHER_TIMEOUT\\" molecule test

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers .travis/setup.sh is correctly formatted 1`] = `
"#!/bin/sh
sudo apt-get update
# xenial ships LXD 2 LTS, backports ships 3 LTS
sudo apt-get upgrade -t xenial-backports -y lxd lxd-client

sudo lxd --version
# Wait for the socket to be ready
sudo lxd waitready
sudo lxd init --auto

pip install ansible
pip install molecule

# Enable nesting without privileged containers,
# cf. https://stgraber.org/2017/06/15/custom-user-mappings-in-lxd-containers/
sudo sed -i 's/^\\\\(lxd:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subuid
sudo sed -i 's/^\\\\(root:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subuid
sudo sed -i 's/^\\\\(lxd:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subgid
sudo sed -i 's/^\\\\(root:[0-9]\\\\{1,\\\\}\\\\):.*/\\\\1:1000000000/' /etc/subgid
sudo systemctl restart lxd
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers .yamllint is correctly formatted 1`] = `
"extends: default

rules:
  braces:
    max-spaces-inside: 1
    level: error
  brackets:
    max-spaces-inside: 1
    level: error
  line-length: disable
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers README.md is correctly formatted 1`] = `
"Test role
=========
  [![Build Status](https://travis-ci.org/test-travis-username/ansible-role-test-role.svg?branch=master)](https://travis-ci.org/test-travis-username/ansible-role-test-role)

This is a test description for the role.

Requirements
------------

This role makes some assumptions.

Role Variables
--------------

Name | Default | Possible values | Description
---|---|---|---
\`example_variable\` | \`true\` | \`true\` or \`false\` | This is an example to populate the table.

Dependencies
------------

- role
- username.myrole

Example Playbook
----------------

\`\`\`yaml
- hosts: all
  roles:
    - role
    - username.myrole
    - test-role
\`\`\`

License
-------

MIT

Author Information
------------------

Test author ([Test organization](https://example.org))"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers defaults/main.yml is correctly formatted 1`] = `
"---
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers handlers/main.yml is correctly formatted 1`] = `
"---
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers meta/main.yml is correctly formatted 1`] = `
"---
galaxy_info:
  author: Test author
  description: This is a test description for the role.
  company: Test organization
  role_name: test-role
  license: MIT
  min_ansible_version: 2.4
  platforms:
    - name: ubuntu
      versions:
        - trusty
        - xenial
        - bionic
  galaxy_tags:
    - test
    - system
    - linux

  dependencies:
    - { role: role }
    - { role: username.myrole }
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers tasks/main.yml is correctly formatted 1`] = `
"---
"
`;

exports[`generator-molecule-lxd-role:app when all the prompts have answers vars/main.yml is correctly formatted 1`] = `
"---
"
`;

exports[`generator-molecule-lxd-role:app when there are no dependencies README.md skips the dependencies section 1`] = `
"Test role
=========
  [![Build Status](https://travis-ci.org/test-travis-username/ansible-role-test-role.svg?branch=master)](https://travis-ci.org/test-travis-username/ansible-role-test-role)

This is a test description for the role.

Requirements
------------

This role makes some assumptions.

Role Variables
--------------

Name | Default | Possible values | Description
---|---|---|---
\`example_variable\` | \`true\` | \`true\` or \`false\` | This is an example to populate the table.


Example Playbook
----------------

\`\`\`yaml
- hosts: all
  roles:
    - test-role
\`\`\`

License
-------

MIT

Author Information
------------------

Test author ([Test organization](https://example.org))"
`;

exports[`generator-molecule-lxd-role:app when there are no dependencies meta/main.yml formats the metadata properly 1`] = `
"---
galaxy_info:
  author: Test author
  description: This is a test description for the role.
  company: Test organization
  role_name: test-role
  license: MIT
  min_ansible_version: 2.4
  platforms:
    - name: ubuntu
      versions:
        - trusty
        - xenial
        - bionic
  galaxy_tags:
    - test
    - system
    - linux

  dependencies: []
"
`;

exports[`generator-molecule-lxd-role:app when there are no galaxy tags meta/main.yml is correctly formatted 1`] = `
"---
galaxy_info:
  author: Test author
  description: This is a test description for the role.
  company: Test organization
  role_name: test-role
  license: MIT
  min_ansible_version: 2.4
  platforms:
    - name: ubuntu
      versions:
        - trusty
        - xenial
        - bionic
  galaxy_tags: []

  dependencies:
    - { role: role }
    - { role: username.myrole }
"
`;

exports[`generator-molecule-lxd-role:app when there are no requirements README.md skips the requirents section 1`] = `
"Test role
=========
  [![Build Status](https://travis-ci.org/test-travis-username/ansible-role-test-role.svg?branch=master)](https://travis-ci.org/test-travis-username/ansible-role-test-role)

This is a test description for the role.

Role Variables
--------------

Name | Default | Possible values | Description
---|---|---|---
\`example_variable\` | \`true\` | \`true\` or \`false\` | This is an example to populate the table.

Dependencies
------------

- role
- username.myrole

Example Playbook
----------------

\`\`\`yaml
- hosts: all
  roles:
    - role
    - username.myrole
    - test-role
\`\`\`

License
-------

MIT

Author Information
------------------

Test author ([Test organization](https://example.org))"
`;

exports[`generator-molecule-lxd-role:app when there are no requirements meta/main.yml formats the metadata properly 1`] = `
"---
galaxy_info:
  author: Test author
  description: This is a test description for the role.
  company: Test organization
  role_name: test-role
  license: MIT
  min_ansible_version: 2.4
  platforms:
    - name: ubuntu
      versions:
        - trusty
        - xenial
        - bionic
  galaxy_tags:
    - test
    - system
    - linux

  dependencies:
    - { role: role }
    - { role: username.myrole }
"
`;

exports[`generator-molecule-lxd-role:app when there is no organization README.md formats the author information properly 1`] = `
"Test role
=========
  [![Build Status](https://travis-ci.org/test-travis-username/ansible-role-test-role.svg?branch=master)](https://travis-ci.org/test-travis-username/ansible-role-test-role)

This is a test description for the role.

Requirements
------------

This role makes some assumptions.

Role Variables
--------------

Name | Default | Possible values | Description
---|---|---|---
\`example_variable\` | \`true\` | \`true\` or \`false\` | This is an example to populate the table.

Dependencies
------------

- role
- username.myrole

Example Playbook
----------------

\`\`\`yaml
- hosts: all
  roles:
    - role
    - username.myrole
    - test-role
\`\`\`

License
-------

MIT

Author Information
------------------

Test author ([https://example.org](https://example.org))
"
`;

exports[`generator-molecule-lxd-role:app when there is no organization meta/main.yml formats the metadata properly 1`] = `
"---
galaxy_info:
  author: Test author
  description: This is a test description for the role.
  role_name: test-role
  license: MIT
  min_ansible_version: 2.4
  platforms:
    - name: ubuntu
      versions:
        - trusty
        - xenial
        - bionic
  galaxy_tags:
    - test
    - system
    - linux

  dependencies:
    - { role: role }
    - { role: username.myrole }
"
`;

exports[`generator-molecule-lxd-role:app when there is no organization or website README.md formats the author information properly 1`] = `
"Test role
=========
  [![Build Status](https://travis-ci.org/test-travis-username/ansible-role-test-role.svg?branch=master)](https://travis-ci.org/test-travis-username/ansible-role-test-role)

This is a test description for the role.

Requirements
------------

This role makes some assumptions.

Role Variables
--------------

Name | Default | Possible values | Description
---|---|---|---
\`example_variable\` | \`true\` | \`true\` or \`false\` | This is an example to populate the table.

Dependencies
------------

- role
- username.myrole

Example Playbook
----------------

\`\`\`yaml
- hosts: all
  roles:
    - role
    - username.myrole
    - test-role
\`\`\`

License
-------

MIT

Author Information
------------------

Test author
"
`;

exports[`generator-molecule-lxd-role:app when there is no organization or website meta/main.yml formats the metadata properly 1`] = `
"---
galaxy_info:
  author: Test author
  description: This is a test description for the role.
  role_name: test-role
  license: MIT
  min_ansible_version: 2.4
  platforms:
    - name: ubuntu
      versions:
        - trusty
        - xenial
        - bionic
  galaxy_tags:
    - test
    - system
    - linux

  dependencies:
    - { role: role }
    - { role: username.myrole }
"
`;

exports[`generator-molecule-lxd-role:app when there is no website README.md formats the author information properly 1`] = `
"Test role
=========
  [![Build Status](https://travis-ci.org/test-travis-username/ansible-role-test-role.svg?branch=master)](https://travis-ci.org/test-travis-username/ansible-role-test-role)

This is a test description for the role.

Requirements
------------

This role makes some assumptions.

Role Variables
--------------

Name | Default | Possible values | Description
---|---|---|---
\`example_variable\` | \`true\` | \`true\` or \`false\` | This is an example to populate the table.

Dependencies
------------

- role
- username.myrole

Example Playbook
----------------

\`\`\`yaml
- hosts: all
  roles:
    - role
    - username.myrole
    - test-role
\`\`\`

License
-------

MIT

Author Information
------------------


Test author (Test organization)
"
`;

exports[`generator-molecule-lxd-role:app when there is no website meta/main.yml formats the metadata properly 1`] = `
"---
galaxy_info:
  author: Test author
  description: This is a test description for the role.
  company: Test organization
  role_name: test-role
  license: MIT
  min_ansible_version: 2.4
  platforms:
    - name: ubuntu
      versions:
        - trusty
        - xenial
        - bionic
  galaxy_tags:
    - test
    - system
    - linux

  dependencies:
    - { role: role }
    - { role: username.myrole }
"
`;
